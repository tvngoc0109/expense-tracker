{"ast":null,"code":"import _slicedToArray from\"C:/Users/tvngo/OneDrive/M\\xE1y t\\xEDnh/reactjs/expense-tracker-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from'react';import{GlobalContext}from'../context/GlobalState';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var AddTransaction=function AddTransaction(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),amount=_useState4[0],setAmount=_useState4[1];var _useContext=useContext(GlobalContext),addTransaction=_useContext.addTransaction;var onSubmit=function onSubmit(e){e.preventDefault();var newTransaction={id:Math.floor(Math.random()*100000000),text:text,amount:+amount};addTransaction(newTransaction);setText('');// xóa trống khung input sau khi nhập dữ liệu\nsetAmount('');// xóa trống khung input sau khi nhập dữ liệu\n};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Add new transaction\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-control\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"text\",children:\"Text\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:text,onChange:function onChange(e){setText(e.target.value);},placeholder:\"Enter text...\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-control\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"amount\",children:[\"Amount \",/*#__PURE__*/_jsx(\"br\",{}),\"(negative - expense, positive - income)\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:amount,onChange:function onChange(e){setAmount(e.target.value);},placeholder:\"Enter amount...\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn\",children:\"Add transaction\"})]})]});};export default AddTransaction;","map":{"version":3,"sources":["C:/Users/tvngo/OneDrive/Máy tính/reactjs/expense-tracker-react/src/components/AddTransaction.js"],"names":["React","useState","useContext","GlobalContext","AddTransaction","text","setText","amount","setAmount","addTransaction","onSubmit","e","preventDefault","newTransaction","id","Math","floor","random","target","value"],"mappings":"2LAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,KAA4C,OAA5C,CACA,OAASC,aAAT,KAA8B,wBAA9B,C,6IAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,eACDH,QAAQ,CAAC,EAAD,CADP,wCAClBI,IADkB,eACZC,OADY,8BAEGL,QAAQ,CAAC,CAAD,CAFX,yCAElBM,MAFkB,eAEVC,SAFU,+BAGEN,UAAU,CAACC,aAAD,CAHZ,CAGjBM,cAHiB,aAGjBA,cAHiB,CAKzB,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,CAAC,CAAI,CAClBA,CAAC,CAACC,cAAF,GAEA,GAAMC,CAAAA,cAAc,CAAG,CACnBC,EAAE,CAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,SAA3B,CADe,CAEnBZ,IAAI,CAAJA,IAFmB,CAGnBE,MAAM,CAAE,CAACA,MAHU,CAAvB,CAMAE,cAAc,CAACI,cAAD,CAAd,CACAP,OAAO,CAAC,EAAD,CAAP,CAAY;AACZE,SAAS,CAAC,EAAD,CAAT,CAAc;AACjB,CAZD,CAcA,mBACI,wCACG,2CADH,cAEI,cAAM,QAAQ,CAAEE,QAAhB,wBACI,aAAK,SAAS,CAAC,cAAf,wBACI,cAAO,OAAO,CAAC,MAAf,kBADJ,cAEI,cAAO,IAAI,CAAC,MAAZ,CAAmB,KAAK,CAAEL,IAA1B,CAAgC,QAAQ,CAAE,kBAACM,CAAD,CAAO,CAACL,OAAO,CAACK,CAAC,CAACO,MAAF,CAASC,KAAV,CAAP,CAAwB,CAA1E,CAA4E,WAAW,CAAC,eAAxF,EAFJ,GADJ,cAKI,aAAK,SAAS,CAAC,cAAf,wBACI,eAAO,OAAO,CAAC,QAAf,kCACY,aADZ,6CADJ,cAKI,cAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAEZ,MAA5B,CAAoC,QAAQ,CAAE,kBAACI,CAAD,CAAO,CAACH,SAAS,CAACG,CAAC,CAACO,MAAF,CAASC,KAAV,CAAT,CAA0B,CAAhF,CAAkF,WAAW,CAAC,iBAA9F,EALJ,GALJ,cAYI,eAAQ,SAAS,CAAC,KAAlB,6BAZJ,GAFJ,GADJ,CAmBH,CAtCD,CAwCA,cAAef,CAAAA,cAAf","sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nconst AddTransaction = () => {\r\n    const [text, setText] = useState('')\r\n    const [amount, setAmount] = useState(0)\r\n    const { addTransaction } = useContext(GlobalContext)\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 100000000),\r\n            text,\r\n            amount: +amount\r\n        }\r\n\r\n        addTransaction(newTransaction)\r\n        setText('') // xóa trống khung input sau khi nhập dữ liệu\r\n        setAmount('') // xóa trống khung input sau khi nhập dữ liệu\r\n    }\r\n\r\n    return (\r\n        <>\r\n           <h3>Add new transaction</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input type=\"text\" value={text} onChange={(e) => {setText(e.target.value)}} placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\"\r\n                        >Amount <br />\r\n                        (negative - expense, positive - income)</label\r\n                    >\r\n                    <input type=\"number\" value={amount} onChange={(e) => {setAmount(e.target.value)}} placeholder=\"Enter amount...\" />\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddTransaction\r\n"]},"metadata":{},"sourceType":"module"}